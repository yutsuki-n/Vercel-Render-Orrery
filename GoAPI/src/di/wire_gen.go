// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"GoAPI/src/infrastructure/auth"
	"GoAPI/src/infrastructure/database"
	"GoAPI/src/infrastructure/database/gormrepository"
	"GoAPI/src/interface/controller"
	"GoAPI/src/usecase/todo"
	"GoAPI/src/usecase/user"
)

// Injectors from wire.go:

func InitializeUserController() *controller.UserController {
	db := database.NewGorm()
	iUserRepository := gormrepository.NewUserRepository(db)
	iAuthClient := auth.NewAuthClient()
	registerUser := user.NewRegisterUser(iUserRepository, iAuthClient)
	loginUser := user.NewLoginUser(iUserRepository, iAuthClient)
	resetUser := user.NewResetUser(iUserRepository, iAuthClient)
	withdrawalUser := user.NewWithdrawUser(iUserRepository, iAuthClient)
	userController := controller.NewUserController(registerUser, loginUser, resetUser, withdrawalUser)
	return userController
}

func InitializeTodoController() *controller.TodoController {
	db := database.NewGorm()
	iTodoRepository := gormrepository.NewTodoRepository(db)
	createTodo := todo.NewCreateTodo(iTodoRepository)
	duplicateTodo := todo.NewDuplicateTodo(iTodoRepository)
	getTodo := todo.NewGetTodo(iTodoRepository)
	listTodo := todo.NewListTodo(iTodoRepository)
	toggleTodo := todo.NewToggleTodo(iTodoRepository)
	updateTodo := todo.NewUpdateTodo(iTodoRepository)
	deleteTodo := todo.NewDeleteTodo(iTodoRepository)
	todoController := controller.NewTodoController(createTodo, duplicateTodo, getTodo, listTodo, toggleTodo, updateTodo, deleteTodo)
	return todoController
}
